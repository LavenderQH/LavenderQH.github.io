{"posts":[{"title":"C语言学习笔记","text":"前言我大学本科从经管专业转到软件工程专业，大一的时候没有学过任何计算机方面的课程，大二学的专业课直接就是数据库、web开发等课程，周围的同学都已经在大一学过Java的面向对象等内容，当时为了跟上进度自己自学了Java、python的内容，并且学习的节奏很快，一直把读写代码作为学习目标，这导致我的基础十分不牢固，对于一些底层原理一知半解，后面一直在卷绩点、保研、在实验室打工，现在已经快到研二开学，我打算将自己所学的技术栈，系统的梳理一遍，查漏补缺，并且将学习过程形成的笔记发布在个人博客中，以督促自己学习和整理。我一直认为C语言是一门必须学习的计算机编程语言，在保研夏令营准备期间，考虑到部分学校算法机试可能只能用C++,因此看了《算法笔记》一书，在这本书中学了部分C语言基础，但是当时也只是为了应付机试，对于C语言的学习也不够系统，那么我的个人笔记就从C语言开始。 参考资料阮一峰老师的C语言入门教程 https://wangdoc.com/clang/ 1、C语言简介1969年，美国贝尔实验室的肯·汤普森（Ken Thompson）与丹尼斯·里奇（Dennis Ritchie）一起开发了 Unix 操作系统。Unix 是用汇编语言写的，无法移植到其他计算机，他们决定使用高级语言重写。但当时的高级语言无法满足要求，汤普森在 BCPL 语言的基础上发明了 B 语言。1972年，丹尼斯·里奇和布莱恩·柯林汉（Brian Kernighan）又在 B 语言的基础上重新设计了一种新语言，取代 B 语言，称为 C 语言。1973年，整个 Unix 系统都使用 C 语言重写。1988年，美国国家标准协会（ANSI）正式将 C 语言标准化，标志着 C 语言开始稳定和规范化。 1.1 C语言特征低级语言C语言能够直接操作硬件、管理内存、与操作系统对话，是一种接近底层的低级语言，适合写需要和硬件交互、有极高性能要求的程序。 可移植性C语言可以相对简单的移植到各种硬件架构和操作系统，也是嵌入式系统的首选语言，具有良好可移植性。 简单性语法相对简单，语法规则不多，都是基础语法，不提供高级数据结构。 灵活性有很高的编程自由，程序员自己管理内存，也不提供类型检查、数组负索引检查、指针位置检查等措施，也使得debug不太容易。 1.2 C语言版本K＆R CC语言原始版本。 ANSI C（又称 C89 或 C90）1989年，美国国家标准协会（ANSI）制定的 C 语言标准。 C951995年对C89补充的版本 C991999年，C语言标准的第一次大型修订版本，是目前最流行的C语言版本。 C112011年，对C语言的又一次修订版本。 C172017年，C11标准的修补版本 1.3 C语言的编译C语言源码是文本文件，需要通过编译器，生成可执行文件执行，最为常见的C语言编译器是GCC，下面简单说明一下GCC编译器工作过程。","link":"/2023/08/08/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"C语言","slug":"C语言","link":"/tags/C%E8%AF%AD%E8%A8%80/"},{"name":"基础","slug":"基础","link":"/tags/%E5%9F%BA%E7%A1%80/"},{"name":"笔记","slug":"笔记","link":"/tags/%E7%AC%94%E8%AE%B0/"}],"categories":[{"name":"个人笔记","slug":"个人笔记","link":"/categories/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"}],"pages":[]}